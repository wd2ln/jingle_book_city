<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zp.dao.RecommendMapper">
<!--  修改推荐图书-->
  <insert id="addRecommendBook">
    insert into recommend(r_type, b_id) VALUES (#{rtype},#{bid})
  </insert>
<!--  移出推荐图书-->
  <delete id="delRecommendBook">
    delete from recommend where b_id=#{bid} and r_type=#{rtype}
  </delete>
  <select id="queryRecommendCountOfBooksByTypeID" resultType="int" parameterType="int">
    select count(*) from recommend where r_type=#{rType,jdbcType=INTEGER}
  </select>
  <select id="queryBookByRecommendType" resultType="Book">
    select t.bt_id btid,bt_name btname,b.b_id bid,b_isbn bisbn,b_name bname,b_author bauthor,b_publisher bpublisher,
           b_cover bcover,b_image1 bimage1,b_image2 bimage2,b_price bprice,b_stock bstock,b_mark bmark from booktype t,book b,recommend r
    where t.bt_id=b.bt_id and b.b_id=r.b_id and r_type=#{rType,jdbcType=INTEGER} order by b.b_id limit #{i,jdbcType=INTEGER},#{i1,jdbcType=INTEGER}
  </select>
  <select id="queryBookByRtypeAndBid" resultType="int">
    select count(*) from recommend where r_type=#{i,jdbcType=INTEGER} and b_id =#{getbId,jdbcType=INTEGER};
  </select>
  <resultMap id="BaseResultMap" type="com.zp.entity.Recommend">
    <id column="r_id" jdbcType="INTEGER" property="rId" />
    <result column="r_type" jdbcType="INTEGER" property="rType" />
    <result column="b_id" jdbcType="INTEGER" property="bId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    r_id, r_type, b_id
  </sql>
  <select id="selectByExample" parameterType="com.zp.entity.RecommendExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from recommend
    where r_id = #{rId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from recommend
    where r_id = #{rId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zp.entity.RecommendExample">
    delete from recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zp.entity.Recommend">
    insert into recommend (r_id, r_type, b_id
      )
    values (#{rId,jdbcType=INTEGER}, #{rType,jdbcType=INTEGER}, #{bId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zp.entity.Recommend">
    insert into recommend
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rId != null">
        r_id,
      </if>
      <if test="rType != null">
        r_type,
      </if>
      <if test="bId != null">
        b_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rId != null">
        #{rId,jdbcType=INTEGER},
      </if>
      <if test="rType != null">
        #{rType,jdbcType=INTEGER},
      </if>
      <if test="bId != null">
        #{bId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zp.entity.RecommendExample" resultType="java.lang.Long">
    select count(*) from recommend
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update recommend
    <set>
      <if test="record.rId != null">
        r_id = #{record.rId,jdbcType=INTEGER},
      </if>
      <if test="record.rType != null">
        r_type = #{record.rType,jdbcType=INTEGER},
      </if>
      <if test="record.bId != null">
        b_id = #{record.bId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update recommend
    set r_id = #{record.rId,jdbcType=INTEGER},
      r_type = #{record.rType,jdbcType=INTEGER},
      b_id = #{record.bId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zp.entity.Recommend">
    update recommend
    <set>
      <if test="rType != null">
        r_type = #{rType,jdbcType=INTEGER},
      </if>
      <if test="bId != null">
        b_id = #{bId,jdbcType=INTEGER},
      </if>
    </set>
    where r_id = #{rId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zp.entity.Recommend">
    update recommend
    set r_type = #{rType,jdbcType=INTEGER},
      b_id = #{bId,jdbcType=INTEGER}
    where r_id = #{rId,jdbcType=INTEGER}
  </update>
</mapper>